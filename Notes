test file

Notes for Pointers: 

Binary system [0,1]
hexa decimal system [0-F]

memory locations in hexa decimal system in RAM. 
RAM is more accessible, For quick access program load in RAM. 
so all binary files will stored in RAM. when we load program. CPU is machine that computes
ALU 

instruction feed in program counter. then executed, 
1.2 billions second instruction will be executed, so fast it works. 
 




char &y = x (y is just another name for x, its not pointer. its usage tells us this is not talking about address, just a reference of x. because it refers to same box so it contain same letter
		reference is occupying space, its just another name of same variable. 
cout << &x  // output same address
cout << &y// output same address
sometimes references are great, but updation of values can not be done with references, while in link list, or in dynamic memory updatin, we have to use pointers instead of refrences. 
       
       
int can point to to integer, char can point to character, and it also occupying space. approperiate guy pointing to approperiate person. (same team people)


int x;
int *y = new int()  // advantages in POS system. when you have to deal with large customers
After deletion, pointer still points to same location, but nothing sotred in that address. pointer points to NULL then.

*y = NULL
delete(y) also delete it from memory. 
delete (y)  we delete that thing which pointer points to. Now pointer can opint to any random number, for safety purpose we hardcode it to NULL. 

dangling pointer concept. 

10/24/2022

Array: 


Array is collection of variables. 
boxes can not be added or deleted further. we can change values. 
array is immutable unlike other structures.  

int *num = NULL;
num = new int(2)  // store garbage value.

num = NULL // start pointing to nothing, dont point anyspecific place. 

delete num; // this deletes memory location

pointer is always declared on stack. 
we can change values by pass by vaues inside main function, but problem is space complexity. it creatres extra spaces. 
so we use pass by reference. use pointers to change values. 

swap(int *x, int *y) {
int temp = *x;
*x = *y;
*y = temp; }
int main() {
swap(&a, &b);
}



Exam paper: 
1. C
2. 
3. 
4. 
5. 
---


2D arrays: 
It is a collection of boxes, 2 dimensional. 
first box of any row can only see itsown row. 
If your room is 5th room on 4th floor. First you will go to 4 th floor, then search 5th room. 
All boxes in 2D array are of same data type. 
we can not take input after making array. 
Individual variable boxes, do anything with them. like int a. 


31/10/22
Strings:
Some part of OOP also covered. 

A box called string, we can store strings in it. and use functions on them.
string is a kind of array, character array. when we make string, somebody will make chracters array on our brhalf.
there are many ready made functions of strings in string library. 
If we want to make our own functions instead of using his functions. we can make our own function.

how to apply asci values to indexes?
we can convert upper case to lower case usign ASCII codes.

precedes: come before.
array has exception in passing on functions. 
isNumeric();
isAlpha();
inAlphaNum();



Trees: A graph, Google maps working on trees, every tree is graph data structure but every graph is not tree. 
google map: which routeis shortest? 
no cycles in tree 
we can do from parent to child and vice versa but not go from one child to another child.
Tree mostly used in decision making, machine learning. 
akinator. last nodes are personalities, take guesses by yes, no. so he move to child further. 

Binary Tree
https://www.cs.usfca.edu/~galles/visualization/BST.html 
current represent root. sub structures have different roots. 

